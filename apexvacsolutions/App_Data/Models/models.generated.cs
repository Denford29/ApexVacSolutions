//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.4.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "4c9a45b219d64426")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.2")]

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Site Master</summary>
	[PublishedContentModel("SiteMaster")]
	public partial class SiteMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "SiteMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SiteMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SiteMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Body Text
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Browser Title
		///</summary>
		[ImplementPropertyType("browserTitle")]
		public string BrowserTitle
		{
			get { return this.GetPropertyValue<string>("browserTitle"); }
		}

		///<summary>
		/// Heading Image
		///</summary>
		[ImplementPropertyType("headingImage")]
		public string HeadingImage
		{
			get { return this.GetPropertyValue<string>("headingImage"); }
		}

		///<summary>
		/// Hide from Menu
		///</summary>
		[ImplementPropertyType("hideFromMenu")]
		public bool HideFromMenu
		{
			get { return this.GetPropertyValue<bool>("hideFromMenu"); }
		}

		///<summary>
		/// Hide From Side Menu
		///</summary>
		[ImplementPropertyType("hideFromSideMenu")]
		public bool HideFromSideMenu
		{
			get { return this.GetPropertyValue<bool>("hideFromSideMenu"); }
		}

		///<summary>
		/// Link Tittle: This will be used as the link name for all links to this page, defaults to page name if not set.
		///</summary>
		[ImplementPropertyType("linkTittle")]
		public string LinkTittle
		{
			get { return this.GetPropertyValue<string>("linkTittle"); }
		}

		///<summary>
		/// Meta Description
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return this.GetPropertyValue<string>("metaDescription"); }
		}

		///<summary>
		/// Meta Keywords
		///</summary>
		[ImplementPropertyType("metaKeywords")]
		public string MetaKeywords
		{
			get { return this.GetPropertyValue<string>("metaKeywords"); }
		}

		///<summary>
		/// Page Album Image: Select either a single image or the folder with multiple images for a slider.
		///</summary>
		[ImplementPropertyType("pageAlbumImage")]
		public string PageAlbumImage
		{
			get { return this.GetPropertyValue<string>("pageAlbumImage"); }
		}

		///<summary>
		/// Page Heading: This is the main heading on each page, will default to page name if not set.
		///</summary>
		[ImplementPropertyType("pageHeading")]
		public string PageHeading
		{
			get { return this.GetPropertyValue<string>("pageHeading"); }
		}

		///<summary>
		/// Page Icon
		///</summary>
		[ImplementPropertyType("pageIcon")]
		public string PageIcon
		{
			get { return this.GetPropertyValue<string>("pageIcon"); }
		}

		///<summary>
		/// Hide From Sitemap
		///</summary>
		[ImplementPropertyType("searchEngineSiteMapHide")]
		public bool SearchEngineSiteMapHide
		{
			get { return this.GetPropertyValue<bool>("searchEngineSiteMapHide"); }
		}

		///<summary>
		/// SEO Sitemap Frequency
		///</summary>
		[ImplementPropertyType("sEOSitemapFrequency")]
		public string SEositemapFrequency
		{
			get { return this.GetPropertyValue<string>("sEOSitemapFrequency"); }
		}

		///<summary>
		/// SEO Sitemap Priority
		///</summary>
		[ImplementPropertyType("sEOSitemapPriority")]
		public string SEositemapPriority
		{
			get { return this.GetPropertyValue<string>("sEOSitemapPriority"); }
		}
	}

	/// <summary>Home Page</summary>
	[PublishedContentModel("HomePage")]
	public partial class HomePage : SiteMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "HomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Footer Items
		///</summary>
		[ImplementPropertyType("footerItems")]
		public Archetype.Models.ArchetypeModel FooterItems
		{
			get { return this.GetPropertyValue<Archetype.Models.ArchetypeModel>("footerItems"); }
		}
	}

	/// <summary>Standard Text Page</summary>
	[PublishedContentModel("StandardTextPage")]
	public partial class StandardTextPage : SiteMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "StandardTextPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StandardTextPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StandardTextPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content List Items
		///</summary>
		[ImplementPropertyType("contentListItems")]
		public Archetype.Models.ArchetypeModel ContentListItems
		{
			get { return this.GetPropertyValue<Archetype.Models.ArchetypeModel>("contentListItems"); }
		}
	}

	/// <summary>Contact Page</summary>
	[PublishedContentModel("contact")]
	public partial class Contact : SiteMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contact";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Contact(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Contact, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content List Items
		///</summary>
		[ImplementPropertyType("contentListItems")]
		public Archetype.Models.ArchetypeModel ContentListItems
		{
			get { return this.GetPropertyValue<Archetype.Models.ArchetypeModel>("contentListItems"); }
		}

		///<summary>
		/// Map Location: Set the location to be used on the contact page.
		///</summary>
		[ImplementPropertyType("mapLocation")]
		public AngularGoogleMaps.Model MapLocation
		{
			get { return this.GetPropertyValue<AngularGoogleMaps.Model>("mapLocation"); }
		}

		///<summary>
		/// Site Address
		///</summary>
		[ImplementPropertyType("siteAddress")]
		public IEnumerable<string> SiteAddress
		{
			get { return this.GetPropertyValue<IEnumerable<string>>("siteAddress"); }
		}
	}

	/// <summary>Services Landing</summary>
	[PublishedContentModel("servicesLanding")]
	public partial class ServicesLanding : SiteMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "servicesLanding";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ServicesLanding(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ServicesLanding, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content List Items
		///</summary>
		[ImplementPropertyType("contentListItems")]
		public Archetype.Models.ArchetypeModel ContentListItems
		{
			get { return this.GetPropertyValue<Archetype.Models.ArchetypeModel>("contentListItems"); }
		}

		///<summary>
		/// Services Items
		///</summary>
		[ImplementPropertyType("servicesItems")]
		public Archetype.Models.ArchetypeModel ServicesItems
		{
			get { return this.GetPropertyValue<Archetype.Models.ArchetypeModel>("servicesItems"); }
		}
	}

	/// <summary>Service Page</summary>
	[PublishedContentModel("servicePage")]
	public partial class ServicePage : SiteMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "servicePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ServicePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ServicePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content List Items
		///</summary>
		[ImplementPropertyType("contentListItems")]
		public Archetype.Models.ArchetypeModel ContentListItems
		{
			get { return this.GetPropertyValue<Archetype.Models.ArchetypeModel>("contentListItems"); }
		}
	}

	/// <summary>Global Settings</summary>
	[PublishedContentModel("GlobalSettings")]
	public partial class GlobalSettings : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "GlobalSettings";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GlobalSettings(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GlobalSettings, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Site Details</summary>
	[PublishedContentModel("SiteDetails")]
	public partial class SiteDetails : GlobalSettings
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "SiteDetails";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SiteDetails(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SiteDetails, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Default Key Words
		///</summary>
		[ImplementPropertyType("defaultKeyWords")]
		public string DefaultKeyWords
		{
			get { return this.GetPropertyValue<string>("defaultKeyWords"); }
		}

		///<summary>
		/// Default Meta Description
		///</summary>
		[ImplementPropertyType("defaultMetaDescription")]
		public string DefaultMetaDescription
		{
			get { return this.GetPropertyValue<string>("defaultMetaDescription"); }
		}

		///<summary>
		/// Facebook Page
		///</summary>
		[ImplementPropertyType("facebookPage")]
		public string FacebookPage
		{
			get { return this.GetPropertyValue<string>("facebookPage"); }
		}

		///<summary>
		/// Main Header Logo: Logo image used on the header section.
		///</summary>
		[ImplementPropertyType("mainHeaderLogo")]
		public string MainHeaderLogo
		{
			get { return this.GetPropertyValue<string>("mainHeaderLogo"); }
		}

		///<summary>
		/// Site Address
		///</summary>
		[ImplementPropertyType("siteAddress")]
		public string SiteAddress
		{
			get { return this.GetPropertyValue<string>("siteAddress"); }
		}

		///<summary>
		/// Site Contact Email: The email address that will receive contact emails.
		///</summary>
		[ImplementPropertyType("siteContactEmail")]
		public string SiteContactEmail
		{
			get { return this.GetPropertyValue<string>("siteContactEmail"); }
		}

		///<summary>
		/// Site Email Address
		///</summary>
		[ImplementPropertyType("siteEmailAddress")]
		public string SiteEmailAddress
		{
			get { return this.GetPropertyValue<string>("siteEmailAddress"); }
		}

		///<summary>
		/// Site Name
		///</summary>
		[ImplementPropertyType("siteName")]
		public string SiteName
		{
			get { return this.GetPropertyValue<string>("siteName"); }
		}

		///<summary>
		/// Site Phone Number 1
		///</summary>
		[ImplementPropertyType("sitePhoneNumber1")]
		public string SitePhoneNumber1
		{
			get { return this.GetPropertyValue<string>("sitePhoneNumber1"); }
		}

		///<summary>
		/// Site Phone Number 2
		///</summary>
		[ImplementPropertyType("sitePhoneNumber2")]
		public string SitePhoneNumber2
		{
			get { return this.GetPropertyValue<string>("sitePhoneNumber2"); }
		}
	}

	/// <summary>Sliders Container</summary>
	[PublishedContentModel("SlidersContainer")]
	public partial class SlidersContainer : GlobalSettings
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "SlidersContainer";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SlidersContainer(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SlidersContainer, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Slider Item</summary>
	[PublishedContentModel("SliderItem")]
	public partial class SliderItem : GlobalSettings
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "SliderItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SliderItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SliderItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Slider Heading
		///</summary>
		[ImplementPropertyType("sliderHeading")]
		public string SliderHeading
		{
			get { return this.GetPropertyValue<string>("sliderHeading"); }
		}

		///<summary>
		/// Slider Image
		///</summary>
		[ImplementPropertyType("sliderImage")]
		public string SliderImage
		{
			get { return this.GetPropertyValue<string>("sliderImage"); }
		}

		///<summary>
		/// Slider Link Page
		///</summary>
		[ImplementPropertyType("sliderLinkPage")]
		public object SliderLinkPage
		{
			get { return this.GetPropertyValue("sliderLinkPage"); }
		}

		///<summary>
		/// Slider Text
		///</summary>
		[ImplementPropertyType("sliderText")]
		public string SliderText
		{
			get { return this.GetPropertyValue<string>("sliderText"); }
		}
	}

	/// <summary>Choices Container</summary>
	[PublishedContentModel("choicesContainer")]
	public partial class ChoicesContainer : GlobalSettings
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "choicesContainer";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ChoicesContainer(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ChoicesContainer, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Choices Heading
		///</summary>
		[ImplementPropertyType("choicesHeading")]
		public string ChoicesHeading
		{
			get { return this.GetPropertyValue<string>("choicesHeading"); }
		}

		///<summary>
		/// Choices Text
		///</summary>
		[ImplementPropertyType("choicesText")]
		public string ChoicesText
		{
			get { return this.GetPropertyValue<string>("choicesText"); }
		}
	}

	/// <summary>Choice Item</summary>
	[PublishedContentModel("choiceItem")]
	public partial class ChoiceItem : GlobalSettings
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "choiceItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ChoiceItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ChoiceItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Icon: Select the icon for the item
		///</summary>
		[ImplementPropertyType("icon")]
		public Newtonsoft.Json.Linq.JToken Icon
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("icon"); }
		}

		///<summary>
		/// Item Heading
		///</summary>
		[ImplementPropertyType("itemHeading")]
		public string ItemHeading
		{
			get { return this.GetPropertyValue<string>("itemHeading"); }
		}

		///<summary>
		/// Item Text
		///</summary>
		[ImplementPropertyType("itemText")]
		public string ItemText
		{
			get { return this.GetPropertyValue<string>("itemText"); }
		}
	}

	/// <summary>Search Page</summary>
	[PublishedContentModel("searchPage")]
	public partial class SearchPage : SiteMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "searchPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SearchPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SearchPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}
